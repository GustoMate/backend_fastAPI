{
  "openapi": "3.0.0",
  "info": {
    "title": "GustoMate",
    "description": "",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://virtserver.swaggerhub.com/SUYONPARK00_1/GustoMate/1.0.0",
      "description": "SwaggerHub API Auto Mocking"
    },
    {
      "url": "https://jsonplaceholder.typicode.com",
      "description": "JSON Placeholder API"
    }
  ],
  "paths": {
    "/auth/signup": {
      "post": {
        "summary": "User signup",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignupRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "User created successfully"
          },
          "400": {
            "description": "Invalid request"
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "summary": "User login",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "401": {
            "description": "Invalid login"
          }
        }
      }
    },
    "/auth/find-id": {
      "post": {
        "summary": "Find user ID by email",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FindIdRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "User ID found and sent to email"
          },
          "404": {
            "description": "Email not found"
          }
        }
      }
    },
    "/auth/reset-password": {
      "post": {
        "summary": "Reset user password",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResetPasswordRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Password reset successful"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/fridge/ingredients": {
      "get": {
        "summary": "Get fridge ingredients",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "purchaseDate",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "expiryDate",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Fridge ingredients retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IngredientsResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add ingredients to fridge",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddIngredientsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Ingredients added successfully"
          },
          "400": {
            "description": "Ingredients not added"
          }
        }
      }
    },
    "/fridge/ingredients/{id}": {
      "put": {
        "summary": "Update ingredient",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IngredientUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Ingredient updated"
          },
          "404": {
            "description": "Ingredient not found"
          }
        }
      },
      "delete": {
        "summary": "Delete ingredient",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Ingredient deleted"
          },
          "404": {
            "description": "Ingredient not found"
          }
        }
      }
    },
    "/friends": {
      "get": {
        "summary": "Get list of friends",
        "responses": {
          "200": {
            "description": "List of friends",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FriendsResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Send friend request",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FriendRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Friend request sent"
          },
          "400": {
            "description": "Invalid friend request"
          }
        }
      }
    },
    "/friends/requests": {
      "get": {
        "summary": "Get incoming friend requests",
        "responses": {
          "200": {
            "description": "Incoming friend requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FriendRequestsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/friends/requests/{id}": {
      "post": {
        "summary": "Accept or reject friend request",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FriendRequestAction"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Friend request accepted or rejected"
          },
          "404": {
            "description": "Friend request not found"
          }
        }
      }
    },
    "/friends/{id}": {
      "get": {
        "summary": "Get friend's fridge",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Friend's fridge ingredients",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IngredientsResponse"
                }
              }
            }
          },
          "404": {
            "description": "Friend not found"
          }
        }
      },
      "delete": {
        "summary": "Remove friend",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Friend removed"
          },
          "404": {
            "description": "Friend not found"
          }
        }
      }
    },
    "/market": {
      "post": {
        "summary": "List ingredient for exchange",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MarketListingRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Ingredient listed for sale"
          },
          "400": {
            "description": "Invalid request"
          }
        }
      }
    },
    "/chats": {
      "get": {
        "summary": "Get chat list",
        "responses": {
          "200": {
            "description": "List of chats",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChatListResponse"
                }
              }
            }
          }
        }
      }
    },
    "/chats/{id}": {
      "get": {
        "summary": "Get chat messages",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Chat messages",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChatResponse"
                }
              }
            }
          },
          "404": {
            "description": "Chat not found"
          }
        }
      },
      "post": {
        "summary": "Send chat message",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChatMessageRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Message sent"
          },
          "404": {
            "description": "Chat not found"
          }
        }
      }
    },
    "/preferences": {
      "get": {
        "summary": "Get user preferences",
        "responses": {
          "200": {
            "description": "User preferences",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PreferencesResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update user preferences",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PreferencesUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Preferences updated"
          }
        }
      }
    },
    "/profile": {
      "get": {
        "summary": "Get user profile",
        "responses": {
          "200": {
            "description": "User profile",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProfileResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update user profile",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProfileUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Profile updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProfileResponse"
                }
              }
            }
          }
        }
      }
    },
    "/recipes": {
      "get": {
        "summary": "Get recommended recipes",
        "responses": {
          "200": {
            "description": "Recommended recipes",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecipesResponse"
                }
              }
            }
          }
        }
      }
    },
    "/recipes/{id}/reviews": {
      "post": {
        "summary": "Add a review for a recipe",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RecipesReviewRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Review added successfully"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "SignupRequest": {
        "required": [
          "email",
          "nickname",
          "password"
        ],
        "type": "object",
        "properties": {
          "nickname": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "profileImage": {
            "type": "string"
          }
        }
      },
      "LoginRequest": {
        "required": [
          "email",
          "password"
        ],
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "nickname": {
            "type": "string"
          }
        }
      },
      "FindIdRequest": {
        "required": [
          "email"
        ],
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          }
        }
      },
      "ResetPasswordRequest": {
        "required": [
          "email",
          "newPassword"
        ],
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "newPassword": {
            "type": "string"
          }
        }
      },
      "AddIngredientsRequest": {
        "required": [
          "ingredients"
        ],
        "type": "object",
        "properties": {
          "ingredients": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Ingredient"
            }
          }
        }
      },
      "Ingredient": {
        "required": [
          "expiryDate",
          "name",
          "purchaseDate",
          "quantity"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "quantity": {
            "type": "integer"
          },
          "purchaseDate": {
            "type": "string",
            "format": "date"
          },
          "expiryDate": {
            "type": "string",
            "format": "date"
          }
        }
      },
      "IngredientsResponse": {
        "type": "object",
        "properties": {
          "ingredients": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Ingredient"
            }
          }
        }
      },
      "IngredientUpdateRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "quantity": {
            "type": "integer"
          },
          "purchaseDate": {
            "type": "string",
            "format": "date"
          },
          "expiryDate": {
            "type": "string",
            "format": "date"
          }
        }
      },
      "FriendsResponse": {
        "type": "object",
        "properties": {
          "friends": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Friend"
            }
          }
        }
      },
      "Friend": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "nickname": {
            "type": "string"
          },
          "profileImage": {
            "type": "string"
          }
        }
      },
      "FriendRequest": {
        "required": [
          "nickname"
        ],
        "type": "object",
        "properties": {
          "nickname": {
            "type": "string"
          }
        }
      },
      "FriendRequestsResponse": {
        "type": "object",
        "properties": {
          "requests": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FriendRequestItem"
            }
          }
        }
      },
      "FriendRequestItem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "nickname": {
            "type": "string"
          },
          "profileImage": {
            "type": "string"
          }
        }
      },
      "FriendRequestAction": {
        "required": [
          "action"
        ],
        "type": "object",
        "properties": {
          "action": {
            "type": "string",
            "enum": [
              "accept",
              "reject"
            ]
          }
        }
      },
      "MarketListingRequest": {
        "required": [
          "description",
          "ingredientId"
        ],
        "type": "object",
        "properties": {
          "ingredientId": {
            "type": "integer"
          },
          "description": {
            "type": "string"
          }
        }
      },
      "ChatListResponse": {
        "type": "object",
        "properties": {
          "chats": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChatListItem"
            }
          }
        }
      },
      "ChatListItem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "user": {
            "$ref": "#/components/schemas/UserProfile"
          },
          "lastMessage": {
            "type": "string"
          },
          "lastMessageDate": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "ChatResponse": {
        "type": "object",
        "properties": {
          "user": {
            "$ref": "#/components/schemas/UserProfile"
          },
          "messages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChatMessage"
            }
          }
        }
      },
      "ChatMessage": {
        "type": "object",
        "properties": {
          "sender": {
            "$ref": "#/components/schemas/UserProfile"
          },
          "text": {
            "type": "string"
          },
          "sentAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "ChatMessageRequest": {
        "required": [
          "text"
        ],
        "type": "object",
        "properties": {
          "text": {
            "type": "string"
          }
        }
      },
      "UserProfile": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "nickname": {
            "type": "string"
          },
          "profileImage": {
            "type": "string"
          },
          "location": {
            "type": "string"
          }
        }
      },
      "PreferencesResponse": {
        "type": "object",
        "properties": {
          "spiciness": {
            "type": "integer"
          },
          "allergies": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "cookingSkill": {
            "type": "string",
            "enum": [
              "beginner",
              "intermediate",
              "advanced",
              "expert"
            ]
          },
          "cuisinePreferences": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "PreferencesUpdateRequest": {
        "type": "object",
        "properties": {
          "spiciness": {
            "type": "integer"
          },
          "allergies": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "cookingSkill": {
            "type": "string",
            "enum": [
              "beginner",
              "intermediate",
              "advanced",
              "expert"
            ]
          },
          "cuisinePreferences": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "ProfileResponse": {
        "type": "object",
        "properties": {
          "nickname": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "profileImage": {
            "type": "string"
          },
          "preferences": {
            "$ref": "#/components/schemas/PreferencesResponse"
          },
          "fridgePublic": {
            "type": "boolean"
          },
          "notificationsEnabled": {
            "type": "boolean"
          }
        }
      },
      "ProfileUpdateRequest": {
        "type": "object",
        "properties": {
          "nickname": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "profileImage": {
            "type": "string"
          },
          "fridgePublic": {
            "type": "boolean"
          },
          "notificationsEnabled": {
            "type": "boolean"
          }
        }
      },
      "RecipesResponse": {
        "type": "object",
        "properties": {
          "recommendedRecipes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Recipe"
            }
          },
          "specialRecipes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RecipeWithSuggestions"
            }
          }
        }
      },
      "RecipesReviewRequest": {
        "type": "object",
        "properties": {
          "rating": {
            "maximum": 5,
            "minimum": 1,
            "type": "integer"
          },
          "comments": {
            "type": "string"
          }
        }
      },
      "Recipe": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "image": {
            "type": "string"
          },
          "difficulty": {
            "type": "string",
            "enum": [
              "easy",
              "medium",
              "hard"
            ]
          },
          "steps": {
            "type": "string"
          },
          "cuisine": {
            "type": "string"
          },
          "spiciness": {
            "type": "integer"
          },
          "allergens": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "RecipeWithSuggestions": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Recipe"
          },
          {
            "type": "object",
            "properties": {
              "suggestedIngredients": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "variations": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    }
  }
}